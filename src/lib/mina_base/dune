(library
 (name mina_base)
 (public_name mina_base)
 (inline_tests)
 (library_flags -linkall)
 (libraries
   ;opam
   async_kernel
   result
   bin_prot.shape
   ppx_inline_test.config
   sexplib0
   yojson
   ppx_version.runtime
   digestif
   sexp_diff_kernel
   core_kernel
   base.caml
   base
   base.base_internalhash_types
   integers
   base_quickcheck
   core_kernel.uuid
   rocks
   ;libs
   run_in_thread
   kimchi_backend_common
   kimchi_backend.pasta
   mina_base.import
   key_value_database
   empty_hashes
   sgn
   mina_metrics
   pickles_types
   blake2
   snarky_integer
   pickles
   visualization
   trust_system
   sparse_ledger_lib
   snark_params
   signature_lib
   rosetta_coding
   random_oracle
   o1trace
   linked_tree
   hash_prefix_states
   dummy_values
   currency
   mina_numbers
   genesis_constants
   block_time
   base58_check
   allocation_functor
   bignum_bigint
   mina_compile_config
   codable
   crypto_params
   debug_assert
   fold_lib
   hash_prefixes
   one_or_two
   outside_hash_image
   quickcheck_lib
   snark_bits
   snarky.backendless
   test_util
   unsigned_extended
   with_hash
   random_oracle_input
   data_hash_lib
   pickles.backend
   network_peer
   bitstring_lib
   mina_signature_kind
   merkle_address
   mina_base.util
   kimchi_backend
 )
 (preprocessor_deps ../../config.mlh)
 (preprocess
  (pps ppx_snarky ppx_here ppx_coda ppx_version ppx_compare ppx_deriving.enum ppx_deriving.ord
       ppx_base ppx_bench ppx_let ppx_optcomp ppx_sexp_conv ppx_bin_prot ppx_fields_conv ppx_custom_printf ppx_assert ppx_deriving_yojson ppx_inline_test h_list.ppx
 ))
 (instrumentation (backend bisect_ppx))
 (synopsis "Snarks and friends necessary for keypair generation"))
